/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sv.edu.udb.form.imprenta;

import java.util.List;
import sv.edu.udb.library.Imprenta;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import sv.edu.udb.models.Imprenta_Model;
import sv.edu.udb.validacion.Validacion;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
/**
 *
 * @author Pazzuelo02
 */
public class GestionImprenta extends javax.swing.JInternalFrame {
    private DefaultTableModel modelo = null;
    private List<Imprenta> imprentas = new ArrayList<Imprenta>();
    private String idImprentaSeleccionada = "";
    /**
     * Creates new form GestionImprenta
     */
    public GestionImprenta() {
        initComponents();
        inicializarComponentes();
        cargarImprentas();
    }
    private void inicializarComponentes(){
        txtDireccionImprenta.setText("");
        txtDireccionImprenta.setEnabled(false);
        txtNombreImprenta.setText("");
        txtNombreImprenta.setEnabled(false);
        btnEliminarImprenta.setEnabled(false);
        btnModificarImprenta.setEnabled(false);
    }
    private void cargarImprentas(){
        Object[][] datos = null;
        String[] columns = {"Nombre","Dirección"};
        modelo = new DefaultTableModel(datos,columns);
        for(Imprenta _i : imprentas){
            Object[] nuevaLinea = {_i.getNombre(),_i.getDireccion()};
            modelo.addRow(nuevaLinea);
        }
        jtblImprentas.setModel(modelo);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtBusqueda = new javax.swing.JTextField();
        lblPatron = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btnEliminarImprenta = new javax.swing.JButton();
        btnModificarImprenta = new javax.swing.JButton();
        lblNombre = new javax.swing.JLabel();
        txtDireccionImprenta = new javax.swing.JTextField();
        txtNombreImprenta = new javax.swing.JTextField();
        lblDirección = new javax.swing.JLabel();
        lblFiltro = new javax.swing.JLabel();
        cmbBuscador = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtblImprentas = new javax.swing.JTable();

        setTitle("Gestión de Imprentas");

        txtBusqueda.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        txtBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBusquedaKeyReleased(evt);
            }
        });

        lblPatron.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        lblPatron.setText("Patrón a buscar");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Gestión de Imprentas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12))); // NOI18N

        btnEliminarImprenta.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        btnEliminarImprenta.setText("Eliminar");
        btnEliminarImprenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarImprentaActionPerformed(evt);
            }
        });

        btnModificarImprenta.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        btnModificarImprenta.setText("Modificar");
        btnModificarImprenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarImprentaActionPerformed(evt);
            }
        });

        lblNombre.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        lblNombre.setText("Nombre");

        txtDireccionImprenta.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        txtDireccionImprenta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDireccionImprentaKeyTyped(evt);
            }
        });

        txtNombreImprenta.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        txtNombreImprenta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreImprentaKeyTyped(evt);
            }
        });

        lblDirección.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        lblDirección.setText("Dirección");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDirección)
                    .addComponent(lblNombre))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtDireccionImprenta)
                    .addComponent(txtNombreImprenta, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addComponent(btnModificarImprenta)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnEliminarImprenta)
                .addGap(95, 95, 95))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNombre)
                    .addComponent(txtNombreImprenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDireccionImprenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDirección))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnModificarImprenta)
                    .addComponent(btnEliminarImprenta))
                .addGap(21, 21, 21))
        );

        lblFiltro.setText("Filtro");

        cmbBuscador.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nombre", "Dirección" }));

        jtblImprentas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtblImprentas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtblImprentasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtblImprentas);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPatron)
                    .addComponent(lblFiltro))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cmbBuscador, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFiltro)
                    .addComponent(cmbBuscador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPatron))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtBusquedaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusquedaKeyReleased
        if(cmbBuscador.getSelectedItem().toString().equals("Nombre")){
            imprentas = Imprenta_Model.BuscarImprenta("nombre", txtBusqueda.getText());
        }else if(cmbBuscador.getSelectedItem().toString().equals("Dirección")){
            imprentas = Imprenta_Model.BuscarImprenta("direccion", txtBusqueda.getText());
        }
        
        if(txtBusqueda.getText().length() == 1){
            imprentas = Imprenta_Model.obtenerImprentas();
        }
        cargarImprentas();
    }//GEN-LAST:event_txtBusquedaKeyReleased
    
    private void modificartema(){
        try{
            if(validarDatos()){
                if(txtDireccionImprenta.getText().length() > 0 && !(txtDireccionImprenta.getText().isEmpty()) && !(txtDireccionImprenta.getText().equals(" "))){
                    if(txtNombreImprenta.getText().length() > 0 && !(txtNombreImprenta.getText().isEmpty()) && !(txtNombreImprenta.getText().equals(" "))){
                        if(Imprenta_Model.modificar(new Imprenta(idImprentaSeleccionada,txtNombreImprenta.getText(),txtDireccionImprenta.getText()))){
                             JOptionPane.showMessageDialog(null, "Imprenta modificada con éxito","Gestión de Imprentas",JOptionPane.INFORMATION_MESSAGE);
                             txtBusqueda.setText("");
                        }else{
                            JOptionPane.showMessageDialog(null, "Ha ocurrido un error","Gestión de Imprentas",JOptionPane.ERROR_MESSAGE);
                        }
                    }
                }
            }
            
        }catch(Exception ex){
            Logger.getLogger(GestionImprenta.class.getName()).log(Level.SEVERE,null,ex);
        }
    }
        
    private void btnEliminarImprentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarImprentaActionPerformed
           if(!(idImprentaSeleccionada.isEmpty())){
               int confirmar = JOptionPane.showConfirmDialog(null, "¿Estas seguro que deseas eliminar esta imprenta?","Gestion de Imprentas",JOptionPane.WARNING_MESSAGE);
               if(confirmar == JOptionPane.OK_OPTION){
                   Imprenta _i = new Imprenta(idImprentaSeleccionada, false);
                   if(Imprenta_Model.verificarRegistros(_i.getIdImprenta())){
                       if(Imprenta_Model.eliminar(new Imprenta(idImprentaSeleccionada, txtNombreImprenta.getText(), txtDireccionImprenta.getText()))){
                            inicializarComponentes();
                            imprentas = Imprenta_Model.obtenerImprentas();
                            cargarImprentas();
                            JOptionPane.showMessageDialog(null, "Imprenta Eliminada con exito","Gestión de Imprentas",JOptionPane.INFORMATION_MESSAGE);
                            txtBusqueda.setText("");
                        }else{
                            JOptionPane.showMessageDialog(null, "Ha ocurrido un error","Gestión de Imprentas",JOptionPane.ERROR_MESSAGE);
                        }
                   }else{
                       JOptionPane.showMessageDialog(null, "No se puede eliminar esta imprenta porque posee libros", "Gestión de imprentas", JOptionPane.ERROR_MESSAGE);
                   }
                   
                }
           }
    }//GEN-LAST:event_btnEliminarImprentaActionPerformed

    private void btnModificarImprentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarImprentaActionPerformed
        if(!(idImprentaSeleccionada.isEmpty())){
            modificartema();
            inicializarComponentes();
            imprentas = Imprenta_Model.obtenerImprentas();
            cargarImprentas();
        }
    }//GEN-LAST:event_btnModificarImprentaActionPerformed

    private void txtDireccionImprentaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDireccionImprentaKeyTyped
        /*if(!Character.isLetter(evt.getKeyChar()) && !Character.isDigit(evt.getKeyChar()) && !(evt.getKeyChar() == KeyEvent.VK_MINUS) && !(evt.getKeyChar() == KeyEvent.VK_NUMBER_SIGN) && !(evt.getKeyChar() == KeyEvent.VK_PERIOD) && !(evt.getKeyChar() == KeyEvent.VK_SPACE) && !(evt.getKeyChar() == KeyEvent.VK_BACKSPACE)){
            evt.consume();
        }*/
    }//GEN-LAST:event_txtDireccionImprentaKeyTyped

    private void txtNombreImprentaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreImprentaKeyTyped
        /*if(!Character.isLetter(evt.getKeyChar()) && !(evt.getKeyChar() == KeyEvent.VK_SPACE) && !(evt.getKeyChar() == KeyEvent.VK_BACKSPACE)){
            evt.consume();
        }*/
    }//GEN-LAST:event_txtNombreImprentaKeyTyped
    private boolean validarDatos(){
        if(Validacion.validar("^[A-Z]([a-zA-Z0-9]|[- @\\.#&!])*$",txtNombreImprenta.getText(),"Ingrese un nombre válido","Agregar Imprenta")){
            if(Validacion.validar("^([a-zA-Z0-9]|[@\\. -,#&!])*$",txtDireccionImprenta.getText(),"Algunos caracteres no estan permitidos, revise su direccion","Agregar Imprenta")){
                return true;
            }
        }
        return false;
    }
    
    private void jtblImprentasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtblImprentasMouseClicked
        if(imprentas.size() > 0){
            int fila = jtblImprentas.rowAtPoint(evt.getPoint());
            if(fila > -1){
                idImprentaSeleccionada = imprentas.get(fila).getIdImprenta();
                txtDireccionImprenta.setText(imprentas.get(fila).getDireccion());
                txtNombreImprenta.setText(imprentas.get(fila).getNombre()); 
                txtNombreImprenta.setEnabled(true);
                txtDireccionImprenta.setEnabled(true);
                btnEliminarImprenta.setEnabled(true);
                btnModificarImprenta.setEnabled(true);
            }
        }
    }//GEN-LAST:event_jtblImprentasMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEliminarImprenta;
    private javax.swing.JButton btnModificarImprenta;
    private javax.swing.JComboBox<String> cmbBuscador;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtblImprentas;
    private javax.swing.JLabel lblDirección;
    private javax.swing.JLabel lblFiltro;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblPatron;
    private javax.swing.JTextField txtBusqueda;
    private javax.swing.JTextField txtDireccionImprenta;
    private javax.swing.JTextField txtNombreImprenta;
    // End of variables declaration//GEN-END:variables
}

